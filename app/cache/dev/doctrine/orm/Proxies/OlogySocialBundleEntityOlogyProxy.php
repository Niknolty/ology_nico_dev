<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class OlogySocialBundleEntityOlogyProxy extends \Ology\SocialBundle\Entity\Ology implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function update($id, $name, $founder, $description, $imageUrl, $visibility, $readOnly)
    {
        $this->__load();
        return parent::update($id, $name, $founder, $description, $imageUrl, $visibility, $readOnly);
    }

    public function getFirstLabel()
    {
        $this->__load();
        return parent::getFirstLabel();
    }

    public function setFirstLabel($firstLabel)
    {
        $this->__load();
        return parent::setFirstLabel($firstLabel);
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getBlacklisted()
    {
        $this->__load();
        return parent::getBlacklisted();
    }

    public function setBlacklisted($blacklisted)
    {
        $this->__load();
        return parent::setBlacklisted($blacklisted);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function getOlogylabels()
    {
        $this->__load();
        return parent::getOlogylabels();
    }

    public function getOlogyposts()
    {
        $this->__load();
        return parent::getOlogyposts();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setImageUrl($imageUrl)
    {
        $this->__load();
        return parent::setImageUrl($imageUrl);
    }

    public function getImageUrl()
    {
        $this->__load();
        return parent::getImageUrl();
    }

    public function setCreationDate($creationDate)
    {
        $this->__load();
        return parent::setCreationDate($creationDate);
    }

    public function getCreationDate()
    {
        $this->__load();
        return parent::getCreationDate();
    }

    public function getUpdateDate()
    {
        $this->__load();
        return parent::getUpdateDate();
    }

    public function setVisibility($visibility)
    {
        $this->__load();
        return parent::setVisibility($visibility);
    }

    public function getVisibility()
    {
        $this->__load();
        return parent::getVisibility();
    }

    public function setReadOnly($readOnly)
    {
        $this->__load();
        return parent::setReadOnly($readOnly);
    }

    public function getReadOnly()
    {
        $this->__load();
        return parent::getReadOnly();
    }

    public function setFounder(\Ology\SocialBundle\Entity\User $founder = NULL)
    {
        $this->__load();
        return parent::setFounder($founder);
    }

    public function getFounder()
    {
        $this->__load();
        return parent::getFounder();
    }

    public function getImageFile()
    {
        $this->__load();
        return parent::getImageFile();
    }

    public function setImageFile($imageFile)
    {
        $this->__load();
        return parent::setImageFile($imageFile);
    }

    public function getSlug()
    {
        $this->__load();
        return parent::getSlug();
    }

    public function setSlug($slug)
    {
        $this->__load();
        return parent::setSlug($slug);
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }

    public function setUpdateDate($updateDate)
    {
        $this->__load();
        return parent::setUpdateDate($updateDate);
    }

    public function addLabelsOlogies(\Ology\SocialBundle\Entity\LabelsOlogies $ologylabels)
    {
        $this->__load();
        return parent::addLabelsOlogies($ologylabels);
    }

    public function addMembership(\Ology\SocialBundle\Entity\Membership $memberships)
    {
        $this->__load();
        return parent::addMembership($memberships);
    }

    public function getMemberships()
    {
        $this->__load();
        return parent::getMemberships();
    }

    public function addPostsOlogies(\Ology\SocialBundle\Entity\PostsOlogies $ologyposts)
    {
        $this->__load();
        return parent::addPostsOlogies($ologyposts);
    }

    public function addFeaturedOlogy(\Ology\SocialBundle\Entity\FeaturedOlogy $featured)
    {
        $this->__load();
        return parent::addFeaturedOlogy($featured);
    }

    public function getFeatured()
    {
        $this->__load();
        return parent::getFeatured();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'description', 'imageUrl', 'creationDate', 'updateDate', 'visibility', 'readOnly', 'slug', 'blacklisted', 'founder', 'ologylabels', 'memberships', 'ologyposts', 'featured');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}